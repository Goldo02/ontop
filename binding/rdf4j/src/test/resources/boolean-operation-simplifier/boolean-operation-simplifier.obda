[PrefixDeclaration]
:	        	http://ontop.example.org/ontology#
data:			https://ontop.example.org/data/
sosa:   		http://www.w3.org/ns/sosa/

[MappingDeclaration] @collection [[
mappingId	measurement_observation
target		data:latest_observation/{id} a :LatestObservation ; sosa:hasResult data:latest_observation/result/{id} ; sosa:observedProperty data:property/{type_id} ; sosa:madeBySensor data:sensor/{type_id}/{station_id} ; :hasPeriodInSeconds {period} .
source		SELECT me.id AS id, double_value, type_id, station_id, period FROM station s, measurement me
            WHERE s.id = me.station_id AND
                  (
                    -- station types that are always open, regardless of the origin
                            s.stationtype in (
                                              'NOI-Place',
                                              'CreativeIndustry',
                                              'BluetoothStation',
                                              'CarpoolingHub',
                                              'CarpoolingService',
                                              'CarpoolingUser',
                                              'CarsharingCar',
                                              'CarsharingStation',
                                              'EChargingPlug',
                                              'EChargingStation',
                                              'Streetstation',
                                              'Culture')
                        -- station types that are only partly open, constrained by the origin
                        or (s.stationtype = 'Bicycle' and s.origin in ('ALGORAB', 'BIKE_SHARING_MERANO'))
                        or (s.stationtype = 'BikesharingStation' and s.origin = 'ALGORAB')
                        or (s.stationtype = 'EnvironmentStation' and s.origin = 'APPATN-open')
                        or (s.stationtype = 'LinkStation' and (s.origin is null or s.origin = 'NOI'))
                        or (s.stationtype = 'MeteoStation' and s.origin in ('meteotrentino', 'SIAG'))
                        or (s.stationtype = 'ParkingStation' and s.origin in ('FAMAS', 'FBK', 'Municipality Merano'))
                        or (s.stationtype = 'RWISstation' and s.origin = 'InfoMobility')
                        -- special rules
                        or (s.origin = 'APPABZ' and me.period = 3600)
                    )
]]